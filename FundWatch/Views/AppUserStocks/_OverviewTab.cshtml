@model FundWatch.Models.ViewModels.PortfolioDashboardViewModel
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2.Charts
@using Syncfusion.EJ2.Grids
@using FundWatch.Services
@{
    var culture = new System.Globalization.CultureInfo("en-US");
    
    // Get the first stock's options data for featured analysis
    var featuredOptions = Model.OptionsAnalysis?.FirstOrDefault();
    var hasOptionsData = featuredOptions != null && featuredOptions.OptionChain?.Any() == true;
}

<!-- Quantitative Strategy Introduction -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-lg border-0 bg-gradient-primary text-white">
            <div class="card-body py-4">
                <div class="row align-items-center">
                    <div class="col-md-8">
                        <h4 class="mb-2">Black-Scholes Options Analysis</h4>
                        <p class="mb-0">
                            Discover the hidden value in your portfolio using Nobel Prize-winning mathematics. 
                            The Black-Scholes model helps you understand option pricing, volatility, and the Greeks - 
                            key metrics that professional traders use to manage risk and find opportunities.
                        </p>
                    </div>
                    <div class="col-md-4 text-end">
                        <div class="display-6">
                            <i class="fas fa-chart-line"></i> <i class="fas fa-plus mx-2"></i> <i class="fas fa-calculator"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Portfolio Overview with Options Insights -->
<div class="row mb-4 gy-4">
    <div class="col-md-3 col-sm-6">
        <div class="card shadow-sm h-100 border-0">
            <div class="card-body text-center">
                <div class="mb-3">
                    <i class="fas fa-wallet fa-2x text-primary"></i>
                </div>
                <h3 class="mb-1">@Model.PortfolioMetrics.TotalValue.ToString("C0", culture)</h3>
                <p class="text-muted mb-2">Portfolio Value</p>
                <span class="badge @(Model.PortfolioMetrics.TotalPerformance >= 0 ? "bg-success" : "bg-danger")">
                    @(Model.PortfolioMetrics.TotalPerformance >= 0 ? "+" : "")@Model.PortfolioMetrics.TotalPerformance.ToString("F2")%
                </span>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 col-sm-6">
        <div class="card shadow-sm h-100 border-0">
            <div class="card-body text-center">
                <div class="mb-3">
                    <i class="fas fa-shield-alt fa-2x text-success"></i>
                </div>
                <h3 class="mb-1">@(hasOptionsData ? "$" + featuredOptions.OptionChain.Where(o => o.Moneyness == "At-the-Money").FirstOrDefault()?.PutPrice.ToString("F2") ?? "N/A" : "N/A")</h3>
                <p class="text-muted mb-2">Portfolio Protection Cost</p>
                <small class="text-secondary">ATM Put Premium</small>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 col-sm-6">
        <div class="card shadow-sm h-100 border-0">
            <div class="card-body text-center">
                <div class="mb-3">
                    <i class="fas fa-chart-area fa-2x text-info"></i>
                </div>
                <h3 class="mb-1">@(hasOptionsData ? (featuredOptions.HistoricalVolatility * 100).ToString("F1") + "%" : "N/A")</h3>
                <p class="text-muted mb-2">Average Volatility</p>
                <small class="text-secondary">Historical Annual</small>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 col-sm-6">
        <div class="card shadow-sm h-100 border-0">
            <div class="card-body text-center">
                <div class="mb-3">
                    <i class="fas fa-compass fa-2x text-warning"></i>
                </div>
                <h3 class="mb-1">@(hasOptionsData ? featuredOptions.MarketOutlook.Split(' ')[0] : "Analyzing...")</h3>
                <p class="text-muted mb-2">Market Sentiment</p>
                <small class="text-secondary">Options Flow Analysis</small>
            </div>
        </div>
    </div>
</div>

@if (hasOptionsData)
{
    <!-- Interactive Options Chain Visualization -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-dark text-white">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h5 class="mb-0">
                                <i class="fas fa-th me-2"></i>Interactive Options Chain - @featuredOptions.Symbol
                            </h5>
                        </div>
                        <div class="col-md-4 text-end">
                            <small>Current Price: $@featuredOptions.CurrentPrice.ToString("F2")</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="options-explanation mb-4 p-3 bg-light rounded">
                        <p class="mb-0">
                            <strong>Understanding Options:</strong> A <span class="text-success">call option</span> gives you the right to buy at the strike price 
                            (profitable if stock goes up). A <span class="text-danger">put option</span> gives you the right to sell at the strike price 
                            (profitable if stock goes down). The Greeks show how option prices change with market conditions.
                        </p>
                    </div>
                    
                    <!-- Options Payoff Diagram -->
                    <div id="optionsPayoffChart" class="chart-container-400 mb-4"></div>
                    
                    <!-- Greeks Visualization -->
                    <h6 class="mb-3">The Greeks - Your Risk Dashboard</h6>
                    <div id="greeksRadarChart" class="chart-container-400 mb-4"></div>
                    
                    <!-- Options Chain Table -->
                    <div class="table-responsive">
                        <table class="table table-hover options-chain-table">
                            <thead class="table-dark">
                                <tr>
                                    <th colspan="5" class="text-center bg-success text-white">Calls</th>
                                    <th class="text-center">Strike</th>
                                    <th colspan="5" class="text-center bg-danger text-white">Puts</th>
                                </tr>
                                <tr>
                                    <th>Price</th>
                                    <th>Delta</th>
                                    <th>Gamma</th>
                                    <th>Theta</th>
                                    <th>IV%</th>
                                    <th class="text-center">Strike</th>
                                    <th>Price</th>
                                    <th>Delta</th>
                                    <th>Gamma</th>
                                    <th>Theta</th>
                                    <th>IV%</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var option in featuredOptions.OptionChain.OrderBy(o => o.StrikePrice))
                                {
                                    <tr class="@(option.Moneyness == "At-the-Money" ? "table-warning" : "")">
                                        <td class="text-success fw-bold">$@option.CallPrice.ToString("F2")</td>
                                        <td>@option.CallGreeks.Delta.ToString("F3")</td>
                                        <td>@option.CallGreeks.Gamma.ToString("F3")</td>
                                        <td>@option.CallGreeks.Theta.ToString("F3")</td>
                                        <td>@((option.CallImpliedVol * 100).ToString("F1"))%</td>
                                        <td class="text-center fw-bold @(option.Moneyness == "At-the-Money" ? "bg-warning" : "")">
                                            $@option.StrikePrice.ToString("F2")
                                        </td>
                                        <td class="text-danger fw-bold">$@option.PutPrice.ToString("F2")</td>
                                        <td>@option.PutGreeks.Delta.ToString("F3")</td>
                                        <td>@option.PutGreeks.Gamma.ToString("F3")</td>
                                        <td>@option.PutGreeks.Theta.ToString("F3")</td>
                                        <td>@((option.PutImpliedVol * 100).ToString("F1"))%</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="mt-3 text-muted">
                        <small>
                            <strong>Greeks Guide:</strong> 
                            Delta = Price sensitivity | 
                            Gamma = Delta's rate of change | 
                            Theta = Time decay | 
                            IV = Implied Volatility
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Volatility Smile Visualization -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow h-100">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-smile me-2"></i>Volatility Smile</h5>
                </div>
                <div class="card-body">
                    <p class="text-muted mb-3">
                        The "smile" pattern shows how implied volatility changes with strike prices. 
                        Higher volatility at extremes indicates market expectations of large moves.
                    </p>
                    <div id="volatilitySmileChart" class="chart-container-350"></div>
                </div>
            </div>
        </div>
        
        <!-- Portfolio Options Summary -->
        <div class="col-md-6">
            <div class="card shadow h-100">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0"><i class="fas fa-briefcase me-2"></i>Portfolio Options Insights</h5>
                </div>
                <div class="card-body d-flex flex-column">
                    <div class="insights-list flex-grow-1 overflow-auto" style="max-height: 300px;">
                        @foreach (var stock in Model.OptionsAnalysis.Take(5))
                        {
                            var atmOption = stock.OptionChain.FirstOrDefault(o => o.Moneyness == "At-the-Money");
                            if (atmOption != null)
                            {
                                <div class="insight-item mb-3 p-3 border-start border-4 @(stock.MarketOutlook.StartsWith("Bullish") ? "border-success" : stock.MarketOutlook.StartsWith("Bearish") ? "border-danger" : "border-warning")">
                                    <h6 class="mb-1">@stock.Symbol - @stock.CompanyName</h6>
                                    <div class="row">
                                        <div class="col-6">
                                            <small class="text-muted">Call Premium: $@atmOption.CallPrice.ToString("F2")</small>
                                        </div>
                                        <div class="col-6">
                                            <small class="text-muted">Put Premium: $@atmOption.PutPrice.ToString("F2")</small>
                                        </div>
                                    </div>
                                    <small class="@(stock.MarketOutlook.StartsWith("Bullish") ? "text-success" : stock.MarketOutlook.StartsWith("Bearish") ? "text-danger" : "text-warning")">
                                        @stock.MarketOutlook
                                    </small>
                                </div>
                            }
                        }
                    </div>
                    
                    <div class="mt-4 p-3 bg-light rounded">
                        <h6 class="mb-2">Strategy Suggestion</h6>
                        <p class="mb-0 small">
                            @if (featuredOptions.MarketOutlook.StartsWith("Bearish"))
                            {
                                <i class="fas fa-shield-alt text-danger me-1"></i>
                                <text>Consider protective puts to hedge against downside risk. The options market shows increased demand for downside protection.</text>
                            }
                            else if (featuredOptions.MarketOutlook.StartsWith("Bullish"))
                            {
                                <i class="fas fa-rocket text-success me-1"></i>
                                <text>Covered calls could generate additional income. The options market indicates optimistic sentiment.</text>
                            }
                            else
                            {
                                <i class="fas fa-balance-scale text-warning me-1"></i>
                                <text>Iron condors or straddles might work well in this balanced market environment.</text>
                            }
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- No Options Data Available -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body text-center py-5">
                    <i class="fas fa-chart-line fa-4x text-muted mb-3"></i>
                    <h4>Add Stocks to See Options Analysis</h4>
                    <p class="text-muted">
                        Once you add stocks to your portfolio, we'll show you advanced options pricing analysis 
                        using the Black-Scholes model and market sentiment indicators.
                    </p>
                    <a href="/AppUserStocks/CreateOrEdit" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Add Your First Stock
                    </a>
                </div>
            </div>
        </div>
    </div>
}

<!-- JavaScript for Interactive Charts -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('Overview tab DOM loaded');
    console.log('Has options data: @hasOptionsData');
    console.log('Options analysis count: @(Model.OptionsAnalysis?.Count ?? 0)');
    
    @if (hasOptionsData)
    {
        <text>
        // Prepare chart data for the module
        var chartData = {
            hasOptionsData: true,
            payoffData: @Html.Raw(string.IsNullOrWhiteSpace(featuredOptions.ChartData?.PayoffDataJson) ? "null" : featuredOptions.ChartData.PayoffDataJson),
            greeksData: @Html.Raw(string.IsNullOrWhiteSpace(featuredOptions.ChartData?.GreeksDataJson) ? "null" : featuredOptions.ChartData.GreeksDataJson),
            smileData: @Html.Raw(string.IsNullOrWhiteSpace(featuredOptions.ChartData?.SmileDataJson) ? "null" : featuredOptions.ChartData.SmileDataJson)
        };
        
        // Call the overview charts module
        if (typeof OverviewCharts !== 'undefined' && OverviewCharts.initializeCharts) {
            OverviewCharts.initializeCharts(chartData);
        } else {
            console.error('OverviewCharts module not loaded');
        }
        </text>
    }
    else
    {
        <text>
        console.log('No options data available');
        console.log('User stocks count: @(Model.UserStocks?.Count ?? 0)');
        </text>
    }
});
</script>