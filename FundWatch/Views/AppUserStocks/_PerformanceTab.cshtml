@model FundWatch.Models.ViewModels.PortfolioDashboardViewModel

<div class="row g-3 mb-4">
    <!-- Rolling Returns Chart -->
    <div class="col-md-6">
        <div class="card shadow" style="height: 500px; min-height: 500px;">
            <div class="card-header bg-info text-white">
                <h5 class="card-title mb-0">Rolling Returns</h5>
            </div>
            <div class="card-body">
                <div id="rollingReturnsChart" style="height: 430px;"></div>
            </div>
        </div>
    </div>

    <!-- Monthly Performance Chart -->
    <div class="col-md-6">
        <div class="card shadow" style="height: 500px; min-height: 500px;">
            <div class="card-header bg-info text-white">
                <h5 class="card-title mb-0">Monthly Performance</h5>
            </div>
            <div class="card-body">
                <div id="monthlyPerformanceChart" style="height: 430px;"></div>
            </div>
        </div>
    </div>
</div>

<div class="row g-3 mb-4">
    <!-- Portfolio Growth Analysis -->
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-header bg-info text-white">
                <h5 class="card-title mb-0">Portfolio Growth Analysis</h5>
            </div>
            <div class="card-body">
                <div id="portfolioGrowthChart" style="width: 100%; height: 500px; max-height: 500px; overflow: hidden;"></div>
            </div>
        </div>
    </div>
</div>

<script>
    // Initialize Performance Tab Charts
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Performance tab script loaded');
        
        // Store the chart data from the model
        window.monthlyPerfData = @Html.Raw(Json.Serialize(Model.MonthlyPerformanceData ?? new List<MonthlyPerformanceData>()));
        window.rollingReturnsData = @Html.Raw(Json.Serialize(Model.RollingReturnsData ?? new List<RollingReturnsData>()));
        window.portfolioGrowthData = @Html.Raw(Json.Serialize(Model.PortfolioGrowthData ?? new List<PortfolioGrowthPoint>()));
        
        // Log data availability
        console.log("Monthly Performance data points:", window.monthlyPerfData.length);
        console.log("Rolling Returns data points:", window.rollingReturnsData.length);
        console.log("Portfolio Growth data points:", window.portfolioGrowthData.length);
        
        // Initialize charts immediately
        renderPerformanceCharts();
        
        // Also render when the tab is shown
        document.querySelector('a[data-bs-target="#performanceTab"]')?.addEventListener('shown.bs.tab', function() {
            console.log('Performance tab shown - rendering charts');
            renderPerformanceCharts();
        });
    });
    
    function renderPerformanceCharts() {
        try {
            if (typeof ChartManager === 'undefined') {
                console.error('ChartManager not defined! Charts cannot be rendered.');
                return;
            }
            
            console.log('Rendering Performance Tab Charts');
            
            // Render Monthly Performance Chart
            if (window.monthlyPerfData && window.monthlyPerfData.length > 0) {
                ChartManager.renderMonthlyPerformanceChart(window.monthlyPerfData);
                console.log('Monthly Performance Chart rendered');
            } else {
                console.warn('No Monthly Performance data available');
            }
            
            // Render Rolling Returns Chart
            if (window.rollingReturnsData && window.rollingReturnsData.length > 0) {
                ChartManager.renderRollingReturnsChart(window.rollingReturnsData);
                console.log('Rolling Returns Chart rendered');
            } else {
                console.warn('No Rolling Returns data available');
            }
            
            // Render Portfolio Growth Chart
            if (window.portfolioGrowthData && window.portfolioGrowthData.length > 0) {
                ChartManager.renderPortfolioGrowthChart(window.portfolioGrowthData);
                console.log('Portfolio Growth Chart rendered');
            } else {
                console.warn('No Portfolio Growth data available');
            }
        } catch (err) {
            console.error('Error rendering Performance charts:', err);
        }
    }
</script>