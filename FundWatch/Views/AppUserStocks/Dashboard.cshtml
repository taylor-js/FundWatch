@model FundWatch.Models.ViewModels.PortfolioDashboardViewModel
@using FundWatch.Models
@using Syncfusion.EJ2
@using Syncfusion.EJ2.Navigations
@using Syncfusion.EJ2.Charts
@using Syncfusion.EJ2.Grids

@* Explicitly reference correct TabItem from all available libraries *@
@using TabHeader = Syncfusion.EJ2.Navigations.TabHeader
@{
    ViewData["Title"] = "Stock Portfolio Dashboard";
    var culture = new System.Globalization.CultureInfo("en-US");
    
    // Check for API configuration issues
    bool hasApiError = TempData["ApiError"] != null;
    bool hasPerformanceData = Model.PerformanceData != null && Model.PerformanceData.Any() && 
                              Model.PerformanceData.Any(kvp => kvp.Value != null && kvp.Value.Any());
}

<div class="container mt-4" id="dashboard-container">
    <!-- Global loading indicator removed since we're using component-specific loading -->

    <!-- Tab Navigation - loaded as a partial view -->
    @await Html.PartialAsync("_DashboardTabs")

    <!-- Tab Content Container -->
    <div class="tab-content" id="dashboardTabContent">
    
        <!-- Tab Content: Overview -->
        <div id="overviewTab" class="tab-pane fade" role="tabpanel">
            @await Html.PartialAsync("_OverviewTab", Model)
        </div>

        <!-- Tab Content: Performance -->
        <div id="performanceTab" class="tab-pane fade" role="tabpanel">
            @await Html.PartialAsync("_PerformanceTab", Model)
        </div>

        <!-- Tab Content: Analytics -->
        <div id="analyticsTab" class="tab-pane fade" role="tabpanel">
            @await Html.PartialAsync("_AnalyticsTab", Model)
        </div>

        <!-- Tab Content: Holdings -->
        <div id="holdingsTab" class="tab-pane fade" role="tabpanel">
            @await Html.PartialAsync("_HoldingsTab", Model)
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_DashboardCommonScripts")
    @await Html.PartialAsync("_DashboardScripts")
    @await Html.PartialAsync("_DirectChartInit", Model)
    
    <script>
        // Initialize Highcharts when the page loads
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Dashboard view loaded - main script');
            
            // Only ensure the Overview tab is shown, no automatic tab sliding
            setTimeout(function() {
                // Always default to the overview tab
                const overviewTab = document.querySelector('#overview-tab');

                // Only trigger the overview tab click if it's not already active
                if (overviewTab && !overviewTab.classList.contains('active')) {
                    overviewTab.click();
                    console.log('Set Overview tab as default');
                }

                // Initialize charts in hidden tabs without switching to them
                // This helps ensure charts are properly initialized without tab sliding
                initializeHiddenCharts();
            }, 500);

            // Function to initialize charts in hidden tabs without switching tabs
            function initializeHiddenCharts() {
                console.log('Initializing charts in hidden tabs without switching tabs');

                // Force redraw of any Highcharts in performance tab
                const performanceTabContent = document.querySelector('#performanceTab');
                if (performanceTabContent) {
                    if (Highcharts.charts) {
                        Highcharts.charts.forEach(chart => {
                            if (chart && chart.renderTo && performanceTabContent.contains(chart.renderTo)) {
                                setTimeout(() => {
                                    chart.reflow();
                                    console.log('Initialized chart in Performance tab:', chart.renderTo.id);
                                }, 100);
                            }
                        });
                    }
                }

                // Force redraw of any Highcharts in analytics tab
                const analyticsTabContent = document.querySelector('#analyticsTab');
                if (analyticsTabContent) {
                    if (Highcharts.charts) {
                        Highcharts.charts.forEach(chart => {
                            if (chart && chart.renderTo && analyticsTabContent.contains(chart.renderTo)) {
                                setTimeout(() => {
                                    chart.reflow();
                                    console.log('Initialized chart in Analytics tab:', chart.renderTo.id);
                                }, 100);
                            }
                        });
                    }
                }
            }
        });
    </script>
}